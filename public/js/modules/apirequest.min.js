var __awaiter=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,r){function o(e){try{a(s.next(e))}catch(e){r(e)}}function f(e){try{a(s.throw(e))}catch(e){r(e)}}function a(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,f)}a((s=s.apply(e,t||[])).next())}))};import{defined}from"./functions.min.js";export default class ApiRequest{constructor(e,t){this.url=e,defined(t)&&(this.headers=t)}fetchData(e=0){const t=new XMLHttpRequest;if(t.open("GET",this.url,!0),Object.keys(this.headers).length>0)for(let e in this.headers)t.setRequestHeader(e,this.headers[e]);const i=this;return new Promise(((s,n)=>{t.onloadend=function(){s(t.responseText)},t.onerror=function(){n("An error occured when trying to fetch data from "+i.url)},e>0&&(t.timeout=e,t.ontimeout=function(){n("API call to "+i.url+"timed out.")}),t.send()}))}parseResponse(e){try{const t=JSON.parse(e);if(!defined(t.result)||!defined(t.status)||"OK"!==t.status||"object"!=typeof t.result)throw"json.status: "+t.status+", typeof json.result = "+typeof t.result;const i=t.result;let s={updated_at:"string",img_base_url:"string",img_prefix:"string",img_sizes:"object",img_files:"object"};for(const[e,t]of Object.entries(s))if(!defined(i[e])||typeof i[e]!==t)throw"invalid "+e+" value = "+i[e];if(!Array.isArray(i.img_sizes)||!Array.isArray(i.img_files)||0==i.img_sizes.length||0==i.img_files.length)throw"invalid or empty img_sizes or img_files";if(0==i.img_sizes.length||0==i.img_files.length)throw"img_sizes.length = "+i.img_sizes.length+", img_files.length = "+i.img_files.length;for(let e=0;e<i.img_sizes.length;e++){let t=i.img_sizes[e];if("object"!=typeof t||!defined(t.key)||!defined(t.value)||"string"!=typeof t.key||"number"!=typeof t.value)throw"invalid img_sizes["+e+"] = "+t}for(let e=0;e<i.img_files.length;e++){let t=i.img_files[e];if(!("object"==typeof t&&defined(t.name)&&defined(t.ext)&&defined(t.ratio)&&defined(t.ls)&&"string"==typeof t.name&&"string"==typeof t.ext&&"boolean"==typeof t.ls&&"number"==typeof t.ratio))throw"invalid img_files["+e+"] = "+t}return i}catch(e){return console.error("ERROR: Failed parsing response from api."),!1}}sendRequest(e=0){return __awaiter(this,void 0,void 0,(function*(){const t=yield this.fetchData(e);return"string"==typeof t&&this.parseResponse(t)}))}}
